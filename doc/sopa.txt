*sopa.txt*            |GUI|-only dark color scheme for |nvim|

===============================================================================
FEATURES                                                        *sopa-features*

- Dark theme.
- Grayscale according to the golden ratio.
- Colors evenly distributed across the spectrum.
- Foreground colors have the same lightness.
- Similar colors have similar meanings.

===============================================================================
COLORS                                                            *sopa-colors*

>
  | #  | HTML    | HUE    | L*    |
  |----|---------|--------|-------|
  |  0 | #080808 |   0    |  2.19 |
  |  1 | #0c0c0c |   0    |  3.32 |
  |  2 | #121212 |   0    |  5.46 |
  |  3 | #1a1a1a |   0    |  9.26 |
  |  4 | #252525 |   0    | 14.68 |
  |  5 | #383838 |   0    | 23.52 |
  |  6 | #5a5a5a |   0    | 38.24 |
  |  7 | #959595 |   0    | 61.7  |
  |  8 | #ff5b5b |   0    | 61.22 |
  |  9 | #bc8f05 |  45.25 | 61.95 |
  | 10 | #54a900 |  90.18 | 61.88 |
  | 11 | #00ad2b | 134.91 | 61.71 |
  | 12 | #00a7a7 | 180    | 62.02 |
  | 13 | #6b90ff | 225    | 61.91 |
  | 14 | #ba74ff | 270.22 | 61.78 |
  | 15 | #fc4ad0 | 314.83 | 61.78 |
<

===============================================================================
INTEGRATIONS                                                *sopa-integrations*

- |indent-blankline|
- |leap.nvim|
- |neo-tree|
- |nvim-cmp|
- |nvim-treesitter|
- nvim-window-picker |sopa-integrations-nvim-window-picker-example|

===============================================================================
API                                                                  *sopa-api*

SOPA                                                            *sopa-api-sopa*

`sopa`                                                                   *sopa*
  Table containing functions for both highlighting groups and loading this
  color scheme.

`sopa`.hi_groups({groups})                                   *sopa.hi_groups()*
  Helper function for highlighting groups.

  Parameters~
    {groups} `table`
      Each field of this table stands for the group to be highlighted and the
      values must be a table with fields and values set according to the {val}
      parameter from |nvim_set_hl()|.

  See Also~
    |nvim_set_hl()|

`sopa`.init()                                                     *sopa.init()*
  Loads the Sopa de Mamaco color scheme.

  This is the pure Lua equivalent for the `colorscheme sopa` command. If
  'termguicolors' is not set, no changes will be made to the color groups and
  an error message will be outputted.

CONFIGURATIONS                                  *sopa-config* *sopa-api-config*

`sopa.config`                                                     *sopa.config*
  Table for getting and setting options for this color scheme.

  Each field of this table stands for a setting. Each setting may have their
  value set to `nil` in addition to its possible values. By setting to `nil`,
  the setting will be restored to their default value.

`sopa.config`.enabled_integrations           *sopa.config.enabled_integrations*
  - Type: `table`
  - Default Value: `{}`

  It's a list, or technically a table indexed by numbers, in which each indexed
  value is a string with the name of the integration. The following list shows
  the valid plugin names.

  - `cmp`
  - `indent-blankline`
  - `leap`
  - `neo-tree`
  - `treesitter`

COLOR PALETTE                                                *sopa-api-palette*

`sopa.palette`({ix}) -> {rgb}                                    *sopa.palette*
  Functable for getting colors of this colors scheme.

  If called or indexed, it returns a string in the `#rrggbb` format for a color
  with index {ix} in |sopa-colors|.

  Notes~
    - If {ix} is `-1`, it returns `"NONE"`.

  Parameters~
    {i} `number`
      Index of the color in the palette to get the color string.

  Returns~
    {rgb} `string`
      Color in the `#rrggbb` format. |gui-colors|

`sopa.palette`.ix({ix}) -> {rgb}                            *sopa.palette.ix()*
  Same as calling or indexing |sopa.palette| with {ix}.

NVIM-WINDOW-PICKER INTEGRATION       *sopa-api-integrations-nvim-window-picker*

`sopa.integrations.window-picker`             *sopa.integrations.window-picker*
  Table for integrating `nvim-window-picker`.

`sopa.integrations.window-picker.colors`
                                       *sopa.integrations.window-picker.colors*
  Color definitions for `nvim-window-picker`.

                                 *sopa-integrations-nvim-window-picker-example*
  Colors has to be set manually, as shown in the following snippet.

>
    local config = {}
    local colors = require'sopa.integrations.window-picker'.colors
    config = vim.tbl_deep_extend('force', config, colors)
    require'window-picker'.setup(config)
<

===============================================================================
vim:ft=help:norl:nospell:tw=79
